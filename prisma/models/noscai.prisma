model Doctor {
  id             String        @id @default(ulid())
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  name           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  appointments   Appointment[]
}

model Service {
  id             String        @id @default(ulid())
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  name           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  appointments   Appointment[]
}

model Room {
  id             String        @id @default(ulid())
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  name           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  appointments   Appointment[]
}

model Device {
  id                 String              @id @default(ulid())
  organizationId     String
  organization       Organization        @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  name               String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now()) @updatedAt
  appointmentDevices AppointmentDevice[]
}

model Patient {
  id             String        @id @default(ulid())
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  name           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  appointments   Appointment[]
}

model Appointment {
  id                 String              @id @default(ulid())
  organizationId     String
  organization       Organization        @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  doctorId           String
  doctor             Doctor              @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  patientId          String
  patient            Patient             @relation(fields: [patientId], references: [id], onDelete: Cascade)
  roomId             String
  room               Room                @relation(fields: [roomId], references: [id], onDelete: Cascade)
  serviceId          String
  service            Service             @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  startAt            DateTime
  endAt              DateTime
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now()) @updatedAt
  appointmentDevices AppointmentDevice[]
}

model AppointmentDevice {
  id            String      @id @default(ulid())
  appointmentId String
  appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
  deviceId      String
  device        Device      @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
}
